angularJS $q

angular里面用$q实现了promise思想。

他是用来以同步思想进行异步编程的工具。
$q 是一个内置服务

通过依赖注入 $q 来获取它

它有三个状态

1. 等待状态 pending

2. 已完成 fulfilled

3. 已拒绝 rejected

var defer = $q.defer();    //此时为 等待

defer.resolve();           //此时为 已完成

defer.reject();            //此时为 已拒绝
使用场景

比如我们进行 ajax 技术进行数据请求的时候

这个过程是 异步的 我们无法在 成功的回掉函数外面 return 我们想要的数据 (也就是无法以同步的代码风格获取数据)

而promise思想 解决了 以同步思想进行异步编程的问题。
demo

    .provider('ajax',function(){
        
        return {
            $get:['$http','$q',function($http,$q){

                function ajax(obj){
                    var defer = $q.defer()
                    $http(obj)
                        .then(function(result){
                            defer.resolve(result.data)
                        },function(error){
                            defer.reject(error)
                        })
                    return defer.promise.$$state;                           
                }

                return new function(){
                    return ajax;
                }
            }]
        }

    })
    // in controller
    $scope.data = ajax({
                url:'http://localhost:8080/goodslist',
                method:'GET'
            })