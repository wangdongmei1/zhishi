过滤器

它是用来格式化 或者 过滤 我们的数据的

| 告诉 angularJS 你要开始过滤数据了

: 告诉 angularJS 你要对过滤器传参了
1. currency

功能 格式化 数字 将他变为 货币格式

用法

1. 无参用法 {{1000 | currency}} 效果  $1,000.00

2. 有参用法1 {{1000 | currency :'￥'}} 效果 ￥1,000.00  (alt+0165)

3. 有参用法2 {{1000 | currency : char}} $scope.char='￥' 效果 ￥1,000.00
2. date

功能 格式化 时间 (时间戳)

用法

1. 无参用法 {{1504525453449 | date}} 效果 Sep 4, 2017

2. 有参用法1 {{1504525453449 | date : 'EEE-dd-ss'}}  
           {{1504525453449 | date : 'yyyy-MM-dd hh mm ss EEEE'}}

    解析 yyyy 表示获取年份 2017  yy 17

        MM  获取月份  

        dd 获取天

        hh 获取小时

        mm 获取分钟

        ss 获取秒

        EEEE 获取星期   EEE  Mon.

        你可以自由组合他们

3. 有参用法2 {{1504525453449 | date : fromatStr}} $scope.fromatStr = 'yyyy/MM/dd'
3. filter

功能 筛选我们的数据 会使我们的数据变少或者不变 但是 数据的格式不变

用法 

    $scope.array=  [
                        {name:'kimi',age:3},
                        {name:'cindy',age:4},
                        {name:'anglar',age:4},
                        {name:'shitou',age:6},
                        {name:'tiantian',age:5}
                    ]    

1. 无参用法 {{array | filter }} 效果 全部显示

2. 有参用法1 {{array | filter :3 }} 显示含有属性 3 的对象 {{array | filter :'i' }} 显示含有i的属性的对象

  有参用法2 {{array | filter :value }} $scope.value = 'i'

  有参用法3 {{array | filter :fn }} $scope.fn = function(data){ return data.age>4 }
4. json

$scope.jsonObj = {name:'zangsan',age:18}

用法 {{ jsonObj | json }}  就这一个用法

效果 将 js 对象 格式化为 json 对象
5. limitTo

他是用来限制 string 或者 array 这两种数据类型的 显示的长度 {{有效的那一部分}}

用法

无参用法 会全部显示 {{ 'nihao' | limitTo }}  效果  nihao

string {{ 'nihao' | limitTo :2 }} 效果 ni

array {{ [1,2,3,4] | limitTo :3  }} 效果 [1,2,3]

tip: array 里面可以放任何东西
6. lowercase

功能 小写全部字母 string

用法 仅有无参 用法  {{ 'Hello World' | lowercase }} => hello world 
7. uppercase

功能 大写全部字母 string

用法 仅有无参 用法  {{ 'Hello World' | uppercase }} => HELLO WORLD
8. number

无参用法

    {{1000 | number}} 效果 1,000

有参数用法

    {{1000 | number :2 }} 效果 1,000.00

    {{3.141592653 | number :3 }} 效果 3.142
9. orderBy

demo

    $scope.array= [
                {name:'kimi',age:3},
                {name:'cindy',age:4},
                {name:'anglar',age:4},
                {name:'shitou',age:6},
                {name:'tiantian',age:5}
                ];
    <tbody>
       <tr ng-repeat="item in array | orderBy :'-name' ">
           <td>
            {{item.name}}
           </td>
           <td>
            {{item.age}}
            </td>
       </tr>
    </tbody>
用法 1 orderBy :'-name' 这是通过 属性name里面值 来进行降序排列

 2 orderBy :'age' 这是通过 属性age里面值 来进行升序排列

 3 orderBy : value 这是通过 $scope下的value 属性里面值来进行排序 也就是 动态排序