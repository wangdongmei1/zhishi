angularJS

介绍: 他是一个对象 类似jQuery 有 jQuery 和 $, angularJS 有 angular这个对象。
指令

ng-app

用法: ng-app="模块名"

例子: ng-app="myApp"   //名字自定义

作用: 就是规定 angular这个对象起作用的范围  也就是规定管理边界
ng-controller

用法: ng-controller="控制器名"

例子: ng-controller="controller"

作用: 规定controller这个控制器的控制范围
$scope

介绍: 它是angular 里面的 model 数据模型 -> 就是数据 他是一个内置服务 可以在需要的时候注入他 
$scope.$watch

用来监听 $scope下的属性变化
$scope.$emit

冒泡事件
$scope.$on

监听事件
$scope.$broadcast

广播事件
$scope.$digest

局部脏检查 只检查更新 当前$scope 和子scope
$scope.$apply

全局脏检查 从rootScope 开始遍历所有子scope
ng-model

用法: 它用于我们的input select textarea 等能输入的表单元素  ng-model='$scope下的变量'

例子: ng-model="message"   ($scope.message="Hello Angular")
ng-if

介绍: 如果在一个元素上绑定 ng-if="true" 那么这个元素将被渲染 
      ng-if="false" 将不被渲染

      不仅仅可以等于 布尔值 还可以等于 $scope 下的变量
      例如 ng-if="message"
ng-show

介绍: 如果在一个元素上绑定 ng-show="true" 那么这个元素将被显示
ng-show="false" 这个元素将被隐藏
ng-hide

介绍 ng-hide="false"显示 否则 隐藏
ng-repeat

功能: 顾名思义 repeat是重复的意思 

就是说 绑定这个指令的 dom元素 会被重复渲染

用法 ng-repeat="value in array" 有点像 for in 的味道 其中 array 是$scope下的变量 它必须是一个array
ng-class

功能 用来代替 class="banner"这种原生属性的

用法 ng-class="字符串或者是变量"
ng-click

功能 用来代替 onclick="fn()"这种原生属性

用法 ng-click="fn()"
ng-style

功能 用来代替 style 这种原生属性的

ng-style="{background:ok? 'green' : 'red'}"
ng-src

功能 用来代替 src 这种原生属性的

ng-src="path"
ng-href

功能 用来代替 href 这种原生属性的

动态改变href
ng-init

功能 用来 初始化 数据 的

ng-init="a=10"  相当于$scope.a=10;
ng-bind

功能 绑定 数据 类似 {{}}  与其区别是 {{}} 在angular生效前 网页上会显示{{data}} 而 ng-bind不会有这一种问题

ng-bind="message";
以上是部分常用指令

demo

    <!DOCTYPE html>
    <html ng-app="app">

        <head>

            <meta charset="utf-8" />

        </head>

        <body ng-controller="controller">

            {{message}}

            <input ng-model="message" />

        </body>

        <script src="http://cdn.static.runoob.com/libs/angular.js/1.4.6/angular.min.js"></script>
    
    </html>
    <script>

        angular.module('app',[])

            .controller('controller',['$scope',function($scope){

                $scope.message="Hello angularJS!"
                
            }])

    </script>